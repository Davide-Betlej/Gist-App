{"version":3,"sources":["Components/Sidebar.js","Components/Display.js","Components/Wrapper.js","Components/SubmitForm.js","App.js","index.js"],"names":["SideBar","Drawer","open","this","props","AppBar","List","dataFound","gistData","slice","map","item","index","ListItem","button","onClick","e","id","ListItemIcon","ListItemText","primary","description","React","Component","Display","gistPreview","className","Divider","Button","deleteGist","variant","color","startIcon","axios","require","GitHubWrapper","token","client","create","baseURL","responseType","headers","path","get","payload","post","delete","patch","getRequest","postRequest","gistId","deleteRequest","patchRequest","defaultState","extension","content","editDescription","editExtension","editContent","SubmitForm","editFormReset","document","getElementById","reset","setState","formReset","state","handleChange","bind","handleSubmit","handleEdit","target","name","value","preventDefault","data","public","files","createGist","then","alert","catch","error","data1","editGist","style","display","width","justifyContent","Box","sx","maxWidth","border","padding","Typography","component","gutterBottom","align","onSubmit","onChange","htmlFor","type","placeholder","endIcon","App","componentDidMount","handleOverlayClick","handleClick","handleMenuIcon","a","console","getGists","status","log","response","position","Toolbar","cursor","marginLeft","noWrap","TextField","handleoverlayclick","ReactDOM","render"],"mappings":"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","file":"static/js/main.97eecdbd.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from'@material-ui/core/List'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nclass SideBar extends React.Component {\r\n\r\n\r\n  render(){\r\n    return (\r\n      <Drawer open={this.props.open}>\r\n        <AppBar/>\r\n        <List>\r\n        {this.props.dataFound ? this.props.gistData.slice(0, 20).map((item, index) => {\r\n          return (\r\n                <ListItem button key={index} onClick={(e) => this.props.onClick(item.id, e)}>\r\n                    <ListItemIcon><GitHubIcon /></ListItemIcon>\r\n                    <ListItemText primary={item.description} />\r\n                </ListItem>   \r\n          )\r\n        }) : (\r\n            <ListItem> \r\n              <ListItemText primary=\"No gists yet...\" />\r\n            </ListItem>\r\n        )}\r\n        \r\n        </List>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport Gist from 'react-gist'\r\nimport { Button, Divider } from '@mui/material';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass Display extends React.Component {\r\n\r\n    \r\n  render(){\r\n    return (\r\n        <div>\r\n            {this.props.gistPreview || !this.props.dataFound ?\r\n            <div className=\"GistPreview\"><Gist className=\"Gist\" id={this.props.gistPreview} /></div> : null}\r\n            <Divider />\r\n            {this.props.gistPreview || !this.props.dataFound ?\r\n            <div className=\"DeleteButton\">\r\n                <Button\r\n                onClick={this.props.deleteGist}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<DeleteIcon />}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </div> : null}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nconst axios = require('axios');\r\n\r\nclass GitHubWrapper extends React.Component {\r\n    constructor(token) {\r\n        super(token)\r\n        this.token = 'CHANGE THIS TOKEN'\r\n        this.client = axios.create({\r\n            baseURL: 'https://api.github.com/',\r\n            responseType: 'json',\r\n            headers: {\r\n                'Accept': 'application/vnd.github.v3+json',\r\n                'Authorization': 'token ' + this.token\r\n            }\r\n        })\r\n    }\r\n\r\n     getRequest(path) {\r\n        return this.client.get(path)\r\n      }\r\n    \r\n      postRequest(path, payload) {\r\n        return this.client.post(path, payload)\r\n      }\r\n\r\n      deleteRequest(path) {\r\n          return this.client.delete(path)\r\n      }\r\n\r\n      patchRequest(path, payload) {\r\n        return this.client.patch(path, payload)\r\n      }\r\n    \r\n      root() {\r\n        return this.getRequest('/')\r\n      }\r\n    \r\n      createGist(payload) {\r\n        return this.postRequest('/gists', payload)\r\n      }\r\n    \r\n      getGist(gistId) {\r\n        return this.getRequest(`/gists/${gistId}`)\r\n      }\r\n\r\n      deleteGist(gistId) {\r\n          return this.deleteRequest(`/gists/${gistId}`)\r\n      }\r\n\r\n      editGist(gistId, payload) {\r\n        return this.patchRequest(`/gists/${gistId}`, payload)\r\n      }\r\n    }\r\n\r\n    export default GitHubWrapper\r\n","import  React from 'react'\r\nimport GitHubWrapper from './Wrapper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n\r\n\r\nconst defaultState = {\r\n    description: '',\r\n    extension: '',\r\n    content: '',\r\n    editDescription: '',\r\n    editExtension: '',\r\n    editContent: ''\r\n}\r\n\r\nclass SubmitForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = defaultState\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleEdit = this.handleEdit.bind(this);\r\n      }\r\n\r\n      handleChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n      }\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        const data = {\r\n          description: this.state.description,\r\n          public: true,\r\n          files: {[this.state.extension]: {content: this.state.content}}\r\n        }\r\n        let ghWrapper = new GitHubWrapper()\r\n        ghWrapper.createGist(data).then(() => alert('Gist Submitted!')).catch((error) => alert(error))\r\n        this.formReset();\r\n      }\r\n\r\n      handleEdit(e) {\r\n        e.preventDefault();\r\n        const data1 = {\r\n          description: this.state.editDescription,\r\n          files: {[this.state.editExtension]: {content: this.state.editContent}}\r\n        }\r\n        let ghWrapper = new GitHubWrapper()\r\n        ghWrapper.editGist(this.props.gistPreview, data1).then(() => alert('Gist Edited!')).catch((error) => alert(error))\r\n        this.editFormReset();\r\n      }\r\n  \r\n      editFormReset = () => {\r\n        document.getElementById('EditForm').reset()\r\n        this.setState(defaultState)\r\n      }\r\n\r\n      formReset = () => {\r\n        document.getElementById('SubmitForm').reset()\r\n        this.setState(defaultState)\r\n      }\r\n\r\n    render() {\r\n      return (\r\n        <div style={{display: 'flex', width:'100%', justifyContent: 'space-around'}}>\r\n          <div className=\"AddGistDiv\">\r\n            <Box sx={{ width: '100%', maxWidth: 500, border: '1px solid grey', padding: '2rem' }}>\r\n              <Typography variant=\"h2\" component=\"div\" gutterBottom align='center'>\r\n                Add Gist:\r\n              </Typography>\r\n            \r\n            <form id=\"SubmitForm\" onSubmit={this.handleSubmit} onChange={this.handleChange}>\r\n              <div>\r\n                <label htmlFor=\"description\">Description:</label>\r\n                <input className=\"GistDesc\" type=\"text\" name=\"description\" id=\"description\" placeholder=\"Hello World example\" ></input>\r\n              </div>\r\n                <br />\r\n                <label htmlFor=\"extension\">Filename(with extension): </label>\r\n                <input className=\"GistExt\" type=\"text\" name=\"extension\" id=\"extension\" placeholder=\"helloWorld.js\"></input>\r\n                <br />\r\n                <div className=\"TextArea\">\r\n                  <Typography variant=\"h4\" component=\"div\" gutterBottom align='center'>\r\n                    Code:\r\n                  </Typography>\r\n                  <textarea name=\"content\" className=\"AddGistTextArea\" placeholder=\"console.log('Hello World!')\"></textarea>\r\n                </div>\r\n                <br />\r\n                <div className=\"DivButton\">\r\n                  <Button variant=\"contained\" endIcon={<SendIcon />} type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n            </form>\r\n            </Box>\r\n          </div>\r\n          <div className=\"EditGistDiv\">\r\n          <Box sx={{ width: '100%', maxWidth: 500, border: '1px solid grey', padding: '2rem' }}>\r\n              <Typography variant=\"h2\" component=\"div\" gutterBottom align='center'>\r\n                Update Gist:\r\n              </Typography>\r\n            <form id=\"EditForm\" onChange={this.handleChange}>\r\n              <div>\r\n                <label htmlFor=\"description\">Description:</label>\r\n                <input className=\"GistDesc\" type=\"text\" name=\"editDescription\" id=\"description\" ></input>\r\n              </div>\r\n                <br />\r\n                <label htmlFor=\"extension\">Filename(with extension): </label>\r\n                <input className=\"GistExt\" type=\"text\" name=\"editExtension\" id=\"extension\" ></input>\r\n                <br />\r\n                <div className=\"TextArea\">\r\n                  <Typography variant=\"h4\" component=\"div\" gutterBottom align='center'>\r\n                    Code:\r\n                  </Typography>\r\n                  <textarea name=\"editContent\" className=\"AddGistTextArea\"></textarea>\r\n                </div>\r\n                <br />\r\n                <div className=\"DivButton\">\r\n                  <Button variant=\"contained\" endIcon={<SendIcon />} type=\"submit\" onClick={this.handleEdit}>\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n            </form>\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default SubmitForm;\r\n\r\n\r\n\r\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport './App.css';\nimport { TextField } from '@material-ui/core';\nimport axios from'axios';\nimport SideBar from './Components/Sidebar';\nimport Display from './Components/Display';\nimport SubmitForm from './Components/SubmitForm'\nimport GitHubWrapper from './Components/Wrapper'\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { Typography } from '@mui/material';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dataFound: true,\n      open: false,\n      gistPreview: '',\n      gistData: []\n    }\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.handleOverlayClick = this.handleOverlayClick.bind(this);\n    this.handleClick = this.handleClick.bind(this)\n    this.handleMenuIcon = this.handleMenuIcon.bind(this)\n    this.deleteGist = this.deleteGist.bind(this)\n  }\n\n  handleClick(id, e){\n    e.preventDefault();\n    this.setState({ \n      open: false,\n      gistPreview: id\n    })\n  }\n\n  handleMenuIcon(e) {\n    e.preventDefault()\n    if (this.state.open === true) {\n      this.setState ({\n        open: false\n      })\n    } else if (this.state.open === false) {\n      this.setState ({\n        open: true\n      })\n    }\n  }\n\n  handleOverlayClick(){\n    if (this.state.open === true) {\n      this.setState ({\n        open: false\n      })\n    } else if (this.state.open === false) {\n      this.setState ({\n        open: true\n      })\n    }\n  }\n\n  async getGists() {\n    try {\n      let gistData = await axios.get('https://api.github.com/users/Davide-Betlej/gists');\n      return gistData\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\nasync componentDidMount() {\n  let gistData = await this.getGists()\n  if (gistData.status === 200) {\n    this.setState({\n      gistPreview: gistData.data[0].id,\n      gistData: gistData.data,\n    })\n    console.log(gistData.data)\n    console.log('All good!')\n  } else {\n    this.setState({\n      dataFound: false\n    })\n  }\n}\n\n\ndeleteGist () {\n  let ghWrapper = new GitHubWrapper()\n  ghWrapper.deleteGist(this.state.gistPreview).then((response) => console.log(response)).then(() => alert('Gist Deleted!')).catch((error) => alert(error))\n  this.setState({gistPreview: ''})\n}\n\n  render() {\n    return (\n        <div>\n          <AppBar position=\"sticky\">\n              <Toolbar>\n              <MenuIcon onClick={this.handleMenuIcon} style={{ cursor: 'pointer' }} />\n              <Typography variant=\"h4\" component=\"div\" align='center' marginLeft='2rem' noWrap='true'>\n                    Gist App - Davide Betlej\n                  </Typography> \n              <TextField\n              placeholder=\"Search…\"\n               />\n               <AutorenewIcon onClick={this.componentDidMount} style={{marginLeft: 100, cursor: 'pointer'}}/>\n               \n              </Toolbar>\n                \n            </AppBar>\n          <SideBar\n            open={this.state.open}\n            dataFound={this.state.dataFound}\n            gistData={this.state.gistData}\n            handleoverlayclick={this.handleOverlayClick}\n            onClick={this.handleClick}\n          />\n          <Display\n            gistPreview={this.state.gistPreview}\n            dataFound={this.state.dataFound}\n            deleteGist={this.deleteGist}\n          />\n          <SubmitForm \n            gistPreview={this.state.gistPreview}\n          />\n        </div>\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}